import torch
import torch.nn.functional as F
from torch import nn
import numpy as np

def try_cross_entropy_loss():
    num_classes = 5
    batch_size = 3
    logits = torch.randn(batch_size, num_classes, requires_grad=True)
    target = torch.randint(num_classes, (batch_size,), dtype=torch.int64) #The `target` that this loss expects should be a class index in the range [0, C-1] where C is the num_classes
    loss = F.cross_entropy(logits, target)
    loss.backward()

    print(loss.item())

    loss = nn.CrossEntropyLoss(ignore_index=-1)
    #loss = nn.CrossEntropyLoss(ignore_index=-1)
    input = torch.randn(3, 5, requires_grad=True)
    target = torch.empty(3, dtype=torch.long).random_(5)
    #target = torch.tensor([-1,-1,-1,-1,-1], dtype=torch.long)
    output = loss(input, target)

def nll_loss():
    num_classes = 5
    batch_size = 3
    logits = torch.randn(batch_size, num_classes, requires_grad=True)
    target = torch.randint(num_classes, (batch_size,),
                           dtype=torch.int64)  # The `target` that this loss expects should be a class index in the range [0, C-1] where C is the num_classes

    loss = F.nll_loss(logits, target)
    loss.backward()

    print(loss.item())

def precision_recall(t):
    #t = np.array([[2, 1, 0], [3, 4, 5], [6, 7, 8]])
    true_pos = np.diag(t)
    precision = np.mean(true_pos / np.sum(t, axis=0))
    recall = np.mean(true_pos / np.sum(t, axis=1))
    return precision, recall

def mmm():
    t1 = torch.tensor([[1.1400e+04, 1.8700e+02, 3.9000e+01, 0.0000e+00, 0.0000e+00, 1.4000e+01,
             0.0000e+00],
            [9.9300e+02, 5.7700e+02, 5.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00,
             0.0000e+00],
            [1.1700e+02, 5.0000e+00, 7.4000e+01, 2.0000e+00, 0.0000e+00, 6.0000e+00,
             0.0000e+00],
            [1.5300e+02, 1.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.0000e+00,
             0.0000e+00],
            [4.3000e+01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00,
             0.0000e+00],
            [1.2600e+02, 1.0000e+00, 3.0000e+00, 0.0000e+00, 0.0000e+00, 3.4000e+01,
             0.0000e+00],
            [1.9000e+01, 1.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0000e+00,
             0.0000e+00]]).numpy()


    t2 = torch.tensor([[1.1353e+04, 2.2400e+02, 4.0000e+01, 9.0000e+00, 0.0000e+00, 1.4000e+01,
         0.0000e+00],
        [8.4300e+02, 7.2600e+02, 6.0000e+00, 1.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00],
        [1.1000e+02, 1.5000e+01, 7.6000e+01, 1.0000e+00, 0.0000e+00, 2.0000e+00,
         0.0000e+00],
        [1.4400e+02, 0.0000e+00, 0.0000e+00, 1.2000e+01, 0.0000e+00, 3.0000e+00,
         0.0000e+00],
        [4.0000e+01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0000e+00,
         0.0000e+00],
        [1.2600e+02, 1.0000e+00, 5.0000e+00, 0.0000e+00, 0.0000e+00, 3.2000e+01,
         0.0000e+00],
        [1.9000e+01, 0.0000e+00, 1.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         2.0000e+00]]).numpy()

    t3 = torch.tensor([[1.1098e+04, 3.3600e+02, 9.0000e+01, 8.8000e+01, 4.0000e+00, 2.1000e+01,
             3.0000e+00],
            [6.4700e+02, 9.1500e+02, 1.2000e+01, 1.0000e+00, 1.0000e+00, 0.0000e+00,
             0.0000e+00],
            [7.3000e+01, 1.4000e+01, 1.1000e+02, 2.0000e+00, 0.0000e+00, 5.0000e+00,
             0.0000e+00],
            [9.5000e+01, 4.0000e+00, 0.0000e+00, 5.8000e+01, 0.0000e+00, 2.0000e+00,
             0.0000e+00],
            [3.6000e+01, 0.0000e+00, 0.0000e+00, 2.0000e+00, 3.0000e+00, 3.0000e+00,
             0.0000e+00],
            [9.4000e+01, 2.0000e+00, 8.0000e+00, 2.0000e+00, 1.0000e+00, 5.7000e+01,
             0.0000e+00],
            [1.6000e+01, 0.0000e+00, 2.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
             4.0000e+00]]).numpy()

    t9 = torch.tensor([[1.1109e+04, 2.9600e+02, 7.3000e+01, 9.9000e+01, 3.0000e+00, 5.3000e+01,
         7.0000e+00],
        [7.1300e+02, 8.4600e+02, 1.3000e+01, 3.0000e+00, 0.0000e+00, 1.0000e+00,
         0.0000e+00],
        [7.2000e+01, 1.4000e+01, 1.0600e+02, 1.0000e+00, 0.0000e+00, 1.1000e+01,
         0.0000e+00],
        [8.0000e+01, 0.0000e+00, 0.0000e+00, 7.1000e+01, 1.0000e+00, 4.0000e+00,
         3.0000e+00],
        [3.1000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00, 5.0000e+00, 5.0000e+00,
         0.0000e+00],
        [8.0000e+01, 1.0000e+00, 5.0000e+00, 3.0000e+00, 1.0000e+00, 7.4000e+01,
         0.0000e+00],
        [9.0000e+00, 2.0000e+00, 1.0000e+00, 0.0000e+00, 0.0000e+00, 2.0000e+00,
         8.0000e+00]]).numpy()


    t16 = torch.tensor([[1.0969e+04, 4.4400e+02, 9.0000e+01, 8.7000e+01, 3.0000e+00, 4.3000e+01,
         4.0000e+00],
        [6.0400e+02, 9.5300e+02, 1.4000e+01, 3.0000e+00, 0.0000e+00, 1.0000e+00,
         1.0000e+00],
        [7.4000e+01, 1.6000e+01, 1.0900e+02, 0.0000e+00, 0.0000e+00, 5.0000e+00,
         0.0000e+00],
        [9.1000e+01, 2.0000e+00, 0.0000e+00, 5.9000e+01, 2.0000e+00, 4.0000e+00,
         1.0000e+00],
        [2.9000e+01, 0.0000e+00, 0.0000e+00, 1.0000e+00, 1.0000e+01, 4.0000e+00,
         0.0000e+00],
        [8.6000e+01, 1.0000e+00, 7.0000e+00, 5.0000e+00, 2.0000e+00, 6.3000e+01,
         0.0000e+00],
        [1.1000e+01, 2.0000e+00, 2.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00,
         6.0000e+00]]).numpy()


    t4 = torch.tensor([[1.0972e+04, 4.8500e+02, 7.5000e+01, 6.3000e+01, 6.0000e+00, 3.5000e+01,
         4.0000e+00],
        [5.8800e+02, 9.7200e+02, 1.4000e+01, 1.0000e+00, 0.0000e+00, 0.0000e+00,
         1.0000e+00],
        [7.9000e+01, 1.6000e+01, 1.0600e+02, 0.0000e+00, 0.0000e+00, 3.0000e+00,
         0.0000e+00],
        [1.0300e+02, 0.0000e+00, 0.0000e+00, 4.9000e+01, 3.0000e+00, 3.0000e+00,
         1.0000e+00],
        [2.7000e+01, 0.0000e+00, 0.0000e+00, 1.0000e+00, 1.2000e+01, 4.0000e+00,
         0.0000e+00],
        [9.0000e+01, 1.0000e+00, 5.0000e+00, 4.0000e+00, 3.0000e+00, 6.1000e+01,
         0.0000e+00],
        [1.3000e+01, 2.0000e+00, 2.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         5.0000e+00]]).numpy()

    tt1 = torch.tensor([[1.1315e+04, 2.1800e+02, 4.1000e+01, 3.2000e+01, 0.0000e+00, 3.3000e+01,
             1.0000e+00],
            [9.4100e+02, 6.3000e+02, 4.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00,
             0.0000e+00],
            [1.0600e+02, 9.0000e+00, 7.8000e+01, 1.0000e+00, 0.0000e+00, 1.0000e+01,
             0.0000e+00],
            [1.2600e+02, 0.0000e+00, 0.0000e+00, 2.8000e+01, 0.0000e+00, 5.0000e+00,
             0.0000e+00],
            [4.1000e+01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.0000e+00,
             0.0000e+00],
            [1.0700e+02, 1.0000e+00, 2.0000e+00, 0.0000e+00, 0.0000e+00, 5.4000e+01,
             0.0000e+00],
            [2.0000e+01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0000e+00,
             0.0000e+00]]).numpy()


    tt2 = torch.tensor([[1.1201e+04, 2.9600e+02, 5.3000e+01, 7.3000e+01, 0.0000e+00, 1.6000e+01,
         1.0000e+00],
        [7.0600e+02, 8.6000e+02, 8.0000e+00, 1.0000e+00, 0.0000e+00, 1.0000e+00,
         0.0000e+00],
        [9.5000e+01, 1.3000e+01, 9.2000e+01, 1.0000e+00, 0.0000e+00, 3.0000e+00,
         0.0000e+00],
        [1.0400e+02, 0.0000e+00, 0.0000e+00, 5.2000e+01, 0.0000e+00, 3.0000e+00,
         0.0000e+00],
        [4.0000e+01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0000e+00,
         0.0000e+00],
        [1.1600e+02, 2.0000e+00, 5.0000e+00, 0.0000e+00, 0.0000e+00, 4.1000e+01,
         0.0000e+00],
        [1.6000e+01, 1.0000e+00, 1.0000e+00, 0.0000e+00, 0.0000e+00, 2.0000e+00,
         2.0000e+00]]).numpy()


    tt3 = torch.tensor([[1.1108e+04, 3.4200e+02, 9.3000e+01, 6.4000e+01, 2.0000e+00, 3.0000e+01,
         1.0000e+00],
        [6.2400e+02, 9.3800e+02, 1.1000e+01, 2.0000e+00, 0.0000e+00, 1.0000e+00,
         0.0000e+00],
        [7.6000e+01, 1.4000e+01, 1.1000e+02, 0.0000e+00, 0.0000e+00, 4.0000e+00,
         0.0000e+00],
        [9.7000e+01, 0.0000e+00, 0.0000e+00, 5.6000e+01, 1.0000e+00, 5.0000e+00,
         0.0000e+00],
        [3.2000e+01, 0.0000e+00, 0.0000e+00, 1.0000e+00, 4.0000e+00, 7.0000e+00,
         0.0000e+00],
        [8.9000e+01, 1.0000e+00, 6.0000e+00, 2.0000e+00, 2.0000e+00, 6.4000e+01,
         0.0000e+00],
        [1.4000e+01, 1.0000e+00, 1.0000e+00, 0.0000e+00, 0.0000e+00, 2.0000e+00,
         4.0000e+00]]).numpy()

    tt9 = torch.tensor([[1.1087e+04, 3.2200e+02, 7.0000e+01, 1.1000e+02, 0.0000e+00, 4.7000e+01,
             4.0000e+00],
            [6.9900e+02, 8.6200e+02, 1.2000e+01, 1.0000e+00, 0.0000e+00, 2.0000e+00,
             0.0000e+00],
            [7.7000e+01, 1.6000e+01, 1.0100e+02, 1.0000e+00, 0.0000e+00, 9.0000e+00,
             0.0000e+00],
            [8.0000e+01, 1.0000e+00, 0.0000e+00, 7.2000e+01, 1.0000e+00, 4.0000e+00,
             1.0000e+00],
            [3.2000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00, 5.0000e+00, 4.0000e+00,
             0.0000e+00],
            [7.9000e+01, 2.0000e+00, 6.0000e+00, 4.0000e+00, 1.0000e+00, 7.2000e+01,
             0.0000e+00],
            [1.3000e+01, 1.0000e+00, 2.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00,
             5.0000e+00]]).numpy()

    tt11 = torch.tensor([[1.1061e+04, 3.6300e+02, 7.5000e+01, 7.9000e+01, 2.0000e+00, 5.1000e+01,
         9.0000e+00],
        [6.6600e+02, 8.9700e+02, 1.0000e+01, 1.0000e+00, 0.0000e+00, 2.0000e+00,
         0.0000e+00],
        [8.0000e+01, 1.5000e+01, 1.0100e+02, 0.0000e+00, 0.0000e+00, 7.0000e+00,
         1.0000e+00],
        [9.5000e+01, 1.0000e+00, 0.0000e+00, 5.6000e+01, 3.0000e+00, 3.0000e+00,
         1.0000e+00],
        [3.2000e+01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.0000e+00, 4.0000e+00,
         0.0000e+00],
        [7.6000e+01, 1.0000e+00, 6.0000e+00, 5.0000e+00, 1.0000e+00, 7.5000e+01,
         0.0000e+00],
        [1.2000e+01, 1.0000e+00, 1.0000e+00, 0.0000e+00, 0.0000e+00, 2.0000e+00,
         6.0000e+00]]).numpy()


    tt17 = torch.tensor([[1.0984e+04, 4.1500e+02, 8.0000e+01, 1.0100e+02, 5.0000e+00, 4.4000e+01,
         1.1000e+01],
        [6.3500e+02, 9.2300e+02, 1.5000e+01, 1.0000e+00, 0.0000e+00, 2.0000e+00,
         0.0000e+00],
        [7.4000e+01, 1.6000e+01, 1.0900e+02, 0.0000e+00, 0.0000e+00, 5.0000e+00,
         0.0000e+00],
        [8.8000e+01, 1.0000e+00, 0.0000e+00, 6.5000e+01, 2.0000e+00, 2.0000e+00,
         1.0000e+00],
        [2.8000e+01, 0.0000e+00, 0.0000e+00, 2.0000e+00, 8.0000e+00, 6.0000e+00,
         0.0000e+00],
        [7.9000e+01, 1.0000e+00, 6.0000e+00, 4.0000e+00, 1.0000e+00, 7.2000e+01,
         1.0000e+00],
        [1.1000e+01, 1.0000e+00, 1.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00,
         8.0000e+00]]).numpy()


    tt20 = torch.tensor([[1.0948e+04, 4.8900e+02, 7.8000e+01, 7.1000e+01, 5.0000e+00, 4.1000e+01,
         8.0000e+00],
        [5.8800e+02, 9.6900e+02, 1.6000e+01, 1.0000e+00, 0.0000e+00, 2.0000e+00,
         0.0000e+00],
        [7.7000e+01, 1.5000e+01, 1.0700e+02, 0.0000e+00, 0.0000e+00, 5.0000e+00,
         0.0000e+00],
        [1.0400e+02, 1.0000e+00, 0.0000e+00, 4.9000e+01, 2.0000e+00, 3.0000e+00,
         0.0000e+00],
        [2.9000e+01, 0.0000e+00, 0.0000e+00, 2.0000e+00, 9.0000e+00, 4.0000e+00,
         0.0000e+00],
        [8.6000e+01, 1.0000e+00, 6.0000e+00, 5.0000e+00, 1.0000e+00, 6.5000e+01,
         0.0000e+00],
        [1.3000e+01, 2.0000e+00, 1.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         6.0000e+00]]).numpy()


    #p1, r1 = precision_recall(t1[1:,1:])
    #p2, r2 = precision_recall(t2[1:,1:])
    #p3, r3 = precision_recall(t3[1:,1:])
    p9, r9 = precision_recall(t9[1:,1:])
    p16, r16 = precision_recall(t16[1:,1:])
    p4, r4 = precision_recall(t4[1:,1:])
    a=1



def conf_matrix():
    t20 = torch.tensor([[1.5370e+03, 2.6000e+01, 5.0000e+00, 0.0000e+00, 8.0000e+00, 0.0000e+00],
            [2.6000e+01, 1.6300e+02, 4.0000e+00, 0.0000e+00, 1.0000e+01, 1.0000e+00],
            [1.4000e+01, 1.0000e+00, 1.3400e+02, 4.0000e+00, 6.0000e+00, 0.0000e+00],
            [1.0000e+00, 3.0000e+00, 7.0000e+00, 2.2000e+01, 1.1000e+01, 0.0000e+00],
            [1.1000e+01, 1.9000e+01, 1.2000e+01, 7.0000e+00, 1.1500e+02, 0.0000e+00],
            [4.0000e+00, 3.0000e+00, 0.0000e+00, 2.0000e+00, 2.0000e+00, 1.1000e+01]]).numpy()

    t19 = torch.tensor([[1.5310e+03, 3.1000e+01, 6.0000e+00, 0.0000e+00, 8.0000e+00, 0.0000e+00],
            [2.5000e+01, 1.6300e+02, 4.0000e+00, 0.0000e+00, 1.1000e+01, 1.0000e+00],
            [1.2000e+01, 1.0000e+00, 1.3300e+02, 3.0000e+00, 1.0000e+01, 0.0000e+00],
            [1.0000e+00, 3.0000e+00, 6.0000e+00, 2.1000e+01, 1.3000e+01, 0.0000e+00],
            [9.0000e+00, 2.0000e+01, 1.1000e+01, 7.0000e+00, 1.1700e+02, 0.0000e+00],
            [4.0000e+00, 3.0000e+00, 0.0000e+00, 2.0000e+00, 2.0000e+00, 1.1000e+01]]).numpy()

    t18 = torch.tensor([[1.5260e+03, 3.4000e+01, 6.0000e+00, 0.0000e+00, 1.0000e+01, 0.0000e+00],
        [2.5000e+01, 1.6200e+02, 4.0000e+00, 0.0000e+00, 1.2000e+01, 1.0000e+00],
        [1.0000e+01, 1.0000e+00, 1.3300e+02, 3.0000e+00, 1.2000e+01, 0.0000e+00],
        [1.0000e+00, 2.0000e+00, 6.0000e+00, 2.2000e+01, 1.3000e+01, 0.0000e+00],
        [9.0000e+00, 2.1000e+01, 8.0000e+00, 4.0000e+00, 1.2200e+02, 0.0000e+00],
        [4.0000e+00, 2.0000e+00, 0.0000e+00, 2.0000e+00, 3.0000e+00, 1.1000e+01]]).numpy()

    t17 = torch.tensor([[1.5350e+03, 2.7000e+01, 5.0000e+00, 0.0000e+00, 9.0000e+00, 0.0000e+00],
        [2.6000e+01, 1.6100e+02, 4.0000e+00, 0.0000e+00, 1.2000e+01, 1.0000e+00],
        [1.1000e+01, 1.0000e+00, 1.3200e+02, 3.0000e+00, 1.2000e+01, 0.0000e+00],
        [1.0000e+00, 1.0000e+00, 6.0000e+00, 2.3000e+01, 1.3000e+01, 0.0000e+00],
        [9.0000e+00, 2.0000e+01, 8.0000e+00, 6.0000e+00, 1.2100e+02, 0.0000e+00],
        [4.0000e+00, 2.0000e+00, 0.0000e+00, 2.0000e+00, 3.0000e+00, 1.1000e+01]]).numpy()

    t16 = torch.tensor([[1.5270e+03, 3.3000e+01, 5.0000e+00, 0.0000e+00, 1.0000e+01, 1.0000e+00],
        [2.4000e+01, 1.6300e+02, 5.0000e+00, 0.0000e+00, 1.1000e+01, 1.0000e+00],
        [1.1000e+01, 2.0000e+00, 1.3300e+02, 2.0000e+00, 1.1000e+01, 0.0000e+00],
        [1.0000e+00, 2.0000e+00, 6.0000e+00, 1.9000e+01, 1.6000e+01, 0.0000e+00],
        [8.0000e+00, 2.1000e+01, 8.0000e+00, 4.0000e+00, 1.2300e+02, 0.0000e+00],
        [4.0000e+00, 3.0000e+00, 0.0000e+00, 2.0000e+00, 2.0000e+00, 1.1000e+01]]).numpy()

    t15 = torch.tensor([[1.5250e+03, 3.4000e+01, 6.0000e+00, 0.0000e+00, 9.0000e+00, 2.0000e+00],
        [2.3000e+01, 1.6600e+02, 5.0000e+00, 0.0000e+00, 1.0000e+01, 0.0000e+00],
        [1.0000e+01, 2.0000e+00, 1.3500e+02, 2.0000e+00, 1.0000e+01, 0.0000e+00],
        [1.0000e+00, 3.0000e+00, 6.0000e+00, 1.7000e+01, 1.7000e+01, 0.0000e+00],
        [6.0000e+00, 2.2000e+01, 1.0000e+01, 3.0000e+00, 1.2300e+02, 0.0000e+00],
        [3.0000e+00, 3.0000e+00, 0.0000e+00, 2.0000e+00, 3.0000e+00, 1.1000e+01]]).numpy()

    p20, r20 = precision_recall(t20)
    p19, r19 = precision_recall(t19)
    p18, r18 = precision_recall(t18)
    p17, r17 = precision_recall(t17)
    p16, r16 = precision_recall(t16)
    p15, r15 = precision_recall(t15)
    print(p20, r20)
    print(p19, r19)
    print(p18, r18)
    print(p17, r17)
    print(p16, r16)
    print(p15, r15)

if __name__ == "__main__":
    #try_cross_entropy_loss()
    #nll_loss()
    #mmm()
    conf_matrix()